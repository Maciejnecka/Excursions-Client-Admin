(()=>{"use strict";var n={392:(n,r,e)=>{e.d(r,{Z:()=>s});var o=e(537),t=e.n(o),i=e(645),a=e.n(i)()(t());a.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul {\n  list-style: none;\n}\n\nbody {\n  font-family: 'Arial', sans-serif;\n  background-color: #f5f5dc;\n  color: #333;\n}\n\n.button-link {\n  display: inline-block;\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: #fff;\n  text-decoration: none;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  text-align: center;\n  font-size: 16px;\n  transition: background-color 0.3s;\n}\n\n.button-link:hover {\n  background-color: #45a049;\n}\n\n.panel {\n  display: flex;\n  margin: 0 auto;\n  max-width: 1200px;\n  padding: 30px 0;\n}\n\n.panel__excursions {\n  width: 65%;\n}\n\n.excursions {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.excursions__item {\n  background-color: #f4f4f4;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  margin: 10px;\n  padding: 20px;\n  width: calc(50% - 20px);\n  display: flex;\n  flex-direction: column;\n}\n\n.panel__summary li {\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 1rem;\n  margin: 1rem;\n}\n\n.panel__form {\n  background-color: #f4f4f4;\n  border: 1px solid #ddd;\n  padding: 20px;\n  width: 35%;\n  border-radius: 5px;\n}\n\n.uploader,\n.order {\n  border-bottom: 1px solid #ddd;\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n}\n\n.excursions__field-input,\n.order__field-input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  font-family: 'Arial', sans-serif;\n  color: #333;\n  resize: vertical;\n  transition: border-color 0.3s, box-shadow 0.3s;\n}\n\n.excursions__field-input:focus,\n.order__field-input:focus {\n  outline: none;\n  border-color: #4caf50;\n  box-shadow: 0 0 5px #4caf50;\n}\n\n.excursions__field-input--submit,\n.order__field-submit {\n  text-transform: uppercase;\n  font-weight: bold;\n  padding: 10px 20px;\n  margin: 10px auto;\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  width: 100%;\n  transition: background-color 0.3s;\n}\n\n.excursions__field-input--submit:hover,\n.order__field-submit:hover {\n  background-color: #45a049;\n}\n\n.summary__btn-remove {\n  display: flex;\n  justify-content: center;\n  background-color: #ff0000;\n  border-radius: 5px;\n  padding: 10px 20px;\n  margin: 15px 0;\n  color: #fff;\n  text-decoration: none;\n  font-weight: bold;\n  transition: all 0.3s;\n}\n.summary__btn-remove:hover {\n  background-color: #d20000;\n}\n","",{version:3,sources:["webpack://./src/css/client.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gCAAgC;EAChC,yBAAyB;EACzB,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;EACX,qBAAqB;EACrB,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,cAAc;EACd,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,aAAa;EACb,YAAY;AACd;;AAEA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,aAAa;EACb,UAAU;EACV,kBAAkB;AACpB;;AAEA;;EAEE,6BAA6B;EAC7B,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,eAAe;EACf,gCAAgC;EAChC,WAAW;EACX,gBAAgB;EAChB,8CAA8C;AAChD;;AAEA;;EAEE,aAAa;EACb,qBAAqB;EACrB,2BAA2B;AAC7B;;AAEA;;EAEE,yBAAyB;EACzB,iBAAiB;EACjB,kBAAkB;EAClB,iBAAiB;EACjB,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,WAAW;EACX,iCAAiC;AACnC;;AAEA;;EAEE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,yBAAyB;EACzB,kBAAkB;EAClB,kBAAkB;EAClB,cAAc;EACd,WAAW;EACX,qBAAqB;EACrB,iBAAiB;EACjB,oBAAoB;AACtB;AACA;EACE,yBAAyB;AAC3B",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\nbody {\r\n  font-family: 'Arial', sans-serif;\r\n  background-color: #f5f5dc;\r\n  color: #333;\r\n}\r\n\r\n.button-link {\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.button-link:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.panel {\r\n  display: flex;\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  padding: 30px 0;\r\n}\r\n\r\n.panel__excursions {\r\n  width: 65%;\r\n}\r\n\r\n.excursions {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.excursions__item {\r\n  background-color: #f4f4f4;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  width: calc(50% - 20px);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.panel__summary li {\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  margin: 1rem;\r\n}\r\n\r\n.panel__form {\r\n  background-color: #f4f4f4;\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  width: 35%;\r\n  border-radius: 5px;\r\n}\r\n\r\n.uploader,\r\n.order {\r\n  border-bottom: 1px solid #ddd;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.excursions__field-input,\r\n.order__field-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  font-family: 'Arial', sans-serif;\r\n  color: #333;\r\n  resize: vertical;\r\n  transition: border-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.excursions__field-input:focus,\r\n.order__field-input:focus {\r\n  outline: none;\r\n  border-color: #4caf50;\r\n  box-shadow: 0 0 5px #4caf50;\r\n}\r\n\r\n.excursions__field-input--submit,\r\n.order__field-submit {\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  padding: 10px 20px;\r\n  margin: 10px auto;\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.excursions__field-input--submit:hover,\r\n.order__field-submit:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.summary__btn-remove {\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #ff0000;\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  margin: 15px 0;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: all 0.3s;\r\n}\r\n.summary__btn-remove:hover {\r\n  background-color: #d20000;\r\n}\r\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",o=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),o&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),o&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,o,t,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),t&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=t):l[4]="".concat(t)),r.push(l))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(t," */");return[r].concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,o=0;o<r.length;o++)if(r[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],d=o.base?c[0]+o.base:c[0],l=i[d]||0,u="".concat(d," ").concat(l);i[d]=l+1;var A=e(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)r[A].references++,r[A].updater(p);else{var f=t(p,o);o.byIndex=s,r.splice(s,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function t(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,t){var i=o(n=n||[],t=t||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);r[s].references--}for(var c=o(n,t),d=0;d<i.length;d++){var l=e(i[d]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}i=c}}},569:n=>{var r={};n.exports=function(n,e){var o=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var t=void 0!==e.layer;t&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,t&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(o,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(o){var t=r[o];if(void 0!==t)return t.exports;var i=r[o]={id:o,exports:{}};return n[o](i,i.exports,e),i.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var o in r)e.o(r,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:r[o]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(379),r=e.n(n),o=e(795),t=e.n(o),i=e(569),a=e.n(i),s=e(565),c=e.n(s),d=e(216),l=e.n(d),u=e(589),A=e.n(u),p=e(392),f={};f.styleTagTransform=A(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=t(),f.insertStyleElement=l(),r()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const m=new class{constructor(){this.apiUrl="https://my-json-server.typicode.com/Maciejnecka/JsonDB/excursions"}async fetchData(n){const r=await fetch(n);if(r.ok)return await r.json();throw new Error("Nie udało się pobrać danych o wycieczkach")}async sendOrder(n){const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};try{if((await fetch("https://my-json-server.typicode.com/Maciejnecka/JsonDB/orders",r)).ok)return!0;throw new Error("Wystąpił błąd podczas wysyłania zamówienia.")}catch(n){this.handleAPIError(n,"Wystąpił błąd podczas dodawania wycieczki.")}}async addExcursion(n){const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};try{const n=await fetch("http://localhost:3000/excursions",r);if(n.ok)return await n.json();throw new Error("Błąd podczas dodawania wycieczki.")}catch(n){this.handleAPIError(n,"Wystąpił błąd podczas dodawania wycieczki")}}async removeExcursion(n){const r=`http://localhost:3000/excursions/${n}`,e={method:"DELETE"};try{if((await fetch(r,e)).ok)return!0;throw new Error("Błąd podczas usuwania wycieczki.")}catch(n){this.handleAPIError(n,"Wystąpił błąd podczas usuwania wycieczki")}}async updateExcursion(n){const r=`http://localhost:3000/excursions/${n.id}`,e={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};try{const n=await fetch(r,e);if(n.ok)return await n.json();throw new Error("Błąd podczas aktualizacji wycieczki.")}catch(n){this.handleAPIError(n.message)}}handleAPIError(n,r){throw console.error("Błąd komunikacji z API:",n),new Error(r||"Wystąpił błąd podczas aktualizacji wycieczki")}},x=[],b=document.querySelector(".panel__excursions"),E=document.querySelector(".panel__order");function y(){const n=document.querySelector(".panel__summary");n.innerHTML="";const r=x.reduce(((n,r)=>n+r.totalPrice),0);document.querySelector(".order__total-price-value").textContent=r+" PLN",x.forEach(((r,e)=>{const o=document.createElement("li");o.innerHTML=`\n      <h3 class="summary__title">\n        <span class="summary__name">${r.title}</span>\n        <strong class="summary__total-price">${r.totalPrice} PLN</strong>\n      </h3>\n      <p class="summary__prices">dorośli: ${r.adults} x ${r.adultPrice} PLN, dzieci: ${r.children} x ${r.childPrice} PLN</p>\n      <a href="#" class="summary__btn-remove" title="usuń" data-item-index="${e}">Usuń</a>\n    `,n.appendChild(o)})),document.querySelectorAll(".summary__btn-remove").forEach((n=>{n.addEventListener("click",h)}))}function h(n){n.preventDefault();const r=n.target.getAttribute("data-item-index");if(null!==r){const n=x[r].title;confirm(`Are you sure you want to remove excursion "${n}"?`)&&(x.splice(r,1),y())}}b.addEventListener("submit",(function(n){n.preventDefault();const r=n.target,e=r.querySelector('.excursions__field-input[name="adults"]'),o=r.querySelector(".excursions__field--adult-price"),t=r.querySelector('.excursions__field-input[name="children"]'),i=r.querySelector(".excursions__field--child-price");if(n.submitter&&"addToCartButton"===n.submitter.id){const n=r.closest(".excursions__item").querySelector(".excursions__title").textContent,a=parseInt(e.value),s=parseInt(o.textContent),c=parseInt(t.value),d=parseInt(i.textContent),l=(isNaN(a)?0:a)*s+(isNaN(c)?0:c)*d;if(l>0){const r={title:n,adults:isNaN(a)?0:a,adultPrice:s,children:isNaN(c)?0:c,childPrice:d,totalPrice:l};x.push(r),function(n,r){n.value="",r.value=""}(e,t),y()}else alert("Proszę wybrać bilet!")}})),E.addEventListener("submit",(function(n){n.preventDefault();const r=E.querySelector('.order__field-input[name="name"]'),e=E.querySelector('.order__field-input[name="email"]'),o=r.value,t=e.value,i=function(n,r,e){const o=[];return 0===e.length&&o.push("Nie można złożyć zamówienia. Proszę wybrać bilet."),[{name:"name",label:"Imię i nazwisko",required:!0},{name:"email",label:"Email",required:!0,pattern:/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/}].forEach((function(e){const t="name"===e.name?n:r;e.required&&0===t.trim().length&&o.push("Dane w polu "+e.label+" są wymagane."),e.pattern&&(e.pattern.test(t)||o.push("Dane w polu "+e.label+" zawierają niedozwolone znaki, lub nie są zgodne z przyjętym wzorcem."))})),o}(o,t,x);i.length>0?alert(i.join("\n")):async function(n,r,e){try{await m.sendOrder(n)&&(alert("Zamówienie zostało wysłane pomyślnie!"),x.length=0,y(),function(n,r){n.value="",r.value=""}(r,e))}catch(n){console.error(n),alert("Wystąpił błąd podczas komunikacji z serwerem.")}}({name:o,email:t,items:x,total:x.reduce(((n,r)=>n+r.totalPrice),0)},r,e)})),async function(){try{!function(n){const r=document.querySelector(".panel__excursions");r.innerHTML="",n.forEach((n=>{const e=document.createElement("li");e.className="excursions__item",e.innerHTML=`\n          <header class="excursions__header">\n            <h2 class="excursions__title">${n.title}</h2>\n            <p class="excursions__description">\n              ${n.description}\n            </p>\n          </header>\n          <form class="excursions__form>\n            <div class="excursions__field">\n              <label class="excursions__field-name">\n                Dorosły:\n                <span class="excursions__field--adult-price">${n.adultPrice}</span> PLN x\n                <input\n                  class="excursions__field-input"\n                  name="adults"\n                  id="adults-input"\n                />\n              </label>\n            </div>\n            <div class="excursions__field">\n              <label class="excursions__field-name">\n                Dziecko:\n                <span class="excursions__field--child-price">${n.childPrice}</span> PLN x\n                <input\n                  class="excursions__field-input"\n                  name="children"\n                  id="children-input"\n                />\n              </label>\n            </div>\n            <div class="excursions__field excursions__field--submit">\n              <input\n                class="excursions__field-input excursions__field-input--submit"\n                value="dodaj do zamówienia"\n                type="submit"\n                id="addToCartButton"\n              />\n            </div>\n          </form>\n    `,r.appendChild(e)}))}(await m.fetchData(m.apiUrl))}catch(n){console.error(n),alert("Błąd podczas ładowania danych")}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,