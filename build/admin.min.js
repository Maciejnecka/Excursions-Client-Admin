(()=>{"use strict";var n={27:(n,r,e)=>{e.d(r,{Z:()=>a});var o=e(537),i=e.n(o),t=e(645),s=e.n(t)()(i());s.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Arial', sans-serif;\n  background-color: #f5f5dc;\n  color: #333;\n}\n\nul {\n  list-style: none;\n}\n\n.button-link {\n  display: inline-block;\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: #fff;\n  text-decoration: none;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  text-align: center;\n  font-size: 16px;\n  transition: background-color 0.3s;\n}\n\n.button-link:hover {\n  background-color: #45a049;\n}\n\n.panel {\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  max-width: 1200px;\n  padding: 30px 0;\n}\n\n.panel__excursions {\n  display: flex;\n}\n\n.form {\n  display: flex;\n  width: 300px;\n  flex-direction: column;\n}\n\n.excursions {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.excursions__item {\n  background-color: #f4f4f4;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin: 10px;\n  padding: 20px;\n  width: calc(50% - 20px);\n  display: flex;\n  flex-direction: column;\n}\n\n.excursions__title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.excursions__description,\n.form__field,\ninput {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 16px;\n  color: #333;\n  resize: vertical;\n  transition: border-color 0.3s, box-shadow 0.3s;\n}\n\n.excursions__description:focus,\n.form__field:focus,\ninput:focus {\n  outline: none;\n  border-color: #4caf50;\n  box-shadow: 0 0 5px #4caf50;\n}\n\n.excursions__description::placeholder {\n  color: #888;\n}\n\n.panel__form {\n  background-color: #f4f4f4;\n  padding: 20px;\n  width: 30%;\n}\n\n.uploader,\n.order {\n  border-bottom: 1px solid #ddd;\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n}\n\n.form__field {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 16px;\n  margin-top: 5px;\n}\n\n.form__field--longtext {\n  height: 100px;\n}\n\n.excursions__form {\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  margin-top: 20px;\n}\n\n.excursions__field {\n  margin-bottom: 10px;\n}\n\n.excursions__field-name {\n  font-weight: bold;\n}\n\n.excursions__field input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 16px;\n}\n\n.excursions__field--submit {\n  text-align: center;\n}\n\n.excursions__field-input--update,\n.excursions__field-input--remove,\n.order__field-input {\n  text-transform: uppercase;\n  font-weight: bold;\n  padding: 10px 20px;\n  margin: 10px auto;\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  width: 100%;\n  transition: background-color 0.3s;\n}\n\n.excursions__field-input--remove {\n  background-color: #ff0000;\n}\n\n.form {\n  background-color: #f0f0f0;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  max-width: 400px;\n  margin: 0 auto;\n}\n\n.form__row {\n  margin-bottom: 20px;\n}\n\n.form__label {\n  font-weight: bold;\n  display: block;\n}\n","",{version:3,sources:["webpack://./src/css/admin.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,gCAAgC;EAChC,yBAAyB;EACzB,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;EACX,qBAAqB;EACrB,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,cAAc;EACd,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;;;EAGE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,eAAe;EACf,WAAW;EACX,gBAAgB;EAChB,8CAA8C;AAChD;;AAEA;;;EAGE,aAAa;EACb,qBAAqB;EACrB,2BAA2B;AAC7B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,UAAU;AACZ;;AAEA;;EAEE,6BAA6B;EAC7B,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;;EAGE,yBAAyB;EACzB,iBAAiB;EACjB,kBAAkB;EAClB,iBAAiB;EACjB,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,WAAW;EACX,iCAAiC;AACnC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Arial', sans-serif;\r\n  background-color: #f5f5dc;\r\n  color: #333;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\n.button-link {\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.button-link:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.panel {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  padding: 30px 0;\r\n}\r\n\r\n.panel__excursions {\r\n  display: flex;\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  width: 300px;\r\n  flex-direction: column;\r\n}\r\n\r\n.excursions {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.excursions__item {\r\n  background-color: #f4f4f4;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  width: calc(50% - 20px);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.excursions__title {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.excursions__description,\r\n.form__field,\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  color: #333;\r\n  resize: vertical;\r\n  transition: border-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.excursions__description:focus,\r\n.form__field:focus,\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #4caf50;\r\n  box-shadow: 0 0 5px #4caf50;\r\n}\r\n\r\n.excursions__description::placeholder {\r\n  color: #888;\r\n}\r\n\r\n.panel__form {\r\n  background-color: #f4f4f4;\r\n  padding: 20px;\r\n  width: 30%;\r\n}\r\n\r\n.uploader,\r\n.order {\r\n  border-bottom: 1px solid #ddd;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.form__field {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.form__field--longtext {\r\n  height: 100px;\r\n}\r\n\r\n.excursions__form {\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.excursions__field {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.excursions__field-name {\r\n  font-weight: bold;\r\n}\r\n\r\n.excursions__field input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.excursions__field--submit {\r\n  text-align: center;\r\n}\r\n\r\n.excursions__field-input--update,\r\n.excursions__field-input--remove,\r\n.order__field-input {\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  padding: 10px 20px;\r\n  margin: 10px auto;\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.excursions__field-input--remove {\r\n  background-color: #ff0000;\r\n}\r\n\r\n.form {\r\n  background-color: #f0f0f0;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form__row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form__label {\r\n  font-weight: bold;\r\n  display: block;\r\n}\r\n"],sourceRoot:""}]);const a=s},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",o=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),o&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),o&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,o,i,t){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);o&&s[A[0]]||(void 0!==t&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=t),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),r.push(A))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),t="/*# ".concat(i," */");return[r].concat([t]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,o=0;o<r.length;o++)if(r[o].identifier===n){e=o;break}return e}function o(n,o){for(var t={},s=[],a=0;a<n.length;a++){var c=n[a],d=o.base?c[0]+o.base:c[0],A=t[d]||0,l="".concat(d," ").concat(A);t[d]=A+1;var u=e(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)r[u].references++,r[u].updater(p);else{var f=i(p,o);o.byIndex=a,r.splice(a,0,{identifier:l,updater:f,references:1})}s.push(l)}return s}function i(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,i){var t=o(n=n||[],i=i||{});return function(n){n=n||[];for(var s=0;s<t.length;s++){var a=e(t[s]);r[a].references--}for(var c=o(n,i),d=0;d<t.length;d++){var A=e(t[d]);0===r[A].references&&(r[A].updater(),r.splice(A,1))}t=c}}},569:n=>{var r={};n.exports=function(n,e){var o=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,i&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var t=e.sourceMap;t&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(t))))," */")),r.styleTagTransform(o,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(o){var i=r[o];if(void 0!==i)return i.exports;var t=r[o]={id:o,exports:{}};return n[o](t,t.exports,e),t.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var o in r)e.o(r,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:r[o]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(379),r=e.n(n),o=e(795),i=e.n(o),t=e(569),s=e.n(t),a=e(565),c=e.n(a),d=e(216),A=e.n(d),l=e(589),u=e.n(l),p=e(27),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=A(),r()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const x=class{constructor(){this.apiUrl="https://my-json-server.typicode.com/Maciejnecka/JsonDB/excursions"}async fetchData(n){const r=await fetch(n);if(r.ok)return await r.json();throw new Error("Nie udało się pobrać danych o wycieczkach")}async sendOrder(n){const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};try{if((await fetch("https://my-json-server.typicode.com/Maciejnecka/JsonDB/orders",r)).ok)return!0;throw new Error("Wystąpił błąd podczas wysyłania zamówienia.")}catch(n){this.handleAPIError(n,"Wystąpił błąd podczas dodawania wycieczki.")}}async addExcursion(n){const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};try{const n=await fetch("http://localhost:3000/excursions",r);if(n.ok)return await n.json();throw new Error("Błąd podczas dodawania wycieczki.")}catch(n){this.handleAPIError(n,"Wystąpił błąd podczas dodawania wycieczki")}}async removeExcursion(n){const r=`http://localhost:3000/excursions/${n}`,e={method:"DELETE"};try{if((await fetch(r,e)).ok)return!0;throw new Error("Błąd podczas usuwania wycieczki.")}catch(n){this.handleAPIError(n,"Wystąpił błąd podczas usuwania wycieczki")}}async updateExcursion(n){const r=`http://localhost:3000/excursions/${n.id}`,e={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};try{const n=await fetch(r,e);if(n.ok)return await n.json();throw new Error("Błąd podczas aktualizacji wycieczki.")}catch(n){this.handleAPIError(n.message)}}handleAPIError(n,r){throw console.error("Błąd komunikacji z API:",n),new Error(r||"Wystąpił błąd podczas aktualizacji wycieczki")}};function E(n){const r=document.querySelector(".panel__excursions"),e=function(n){const r=document.createElement("li");return r.classList.add("excursions__item"),r.setAttribute("data-id",n.id),r.innerHTML=`\n      <header class="excursions__header">\n          <h2 class="excursions__title">${n.title}</h2>\n          <p class="excursions__description">${n.description}</p>\n      </header>\n      <form class="excursions__form">\n          <div class="excursions__field">\n              <label class="excursions__field-name">\n                  Dorosły: <strong>${n.adultPrice} PLN</strong>\n              </label>\n          </div>\n          <div class="excursions__field">\n              <label class="excursions__field-name">\n                  Dziecko: <strong>${n.childPrice} PLN</strong>\n              </label>\n          </div>\n          <div class="excursions__field excursions__field--submit">\n              <input\n                  class="excursions__field-input excursions__field-input--update"\n                  value="edytuj"\n                  type="submit"\n              />\n              <input\n                  class="excursions__field-input excursions__field-input--remove"\n                  value="usuń"\n                  type="submit"\n              />\n          </div>\n      </form>\n  `,r}(n);r.appendChild(e),function(){const n=document.getElementById("excursion-title"),r=document.getElementById("excursion-description"),e=document.getElementById("excursion-adult-price"),o=document.getElementById("excursion-child-price");n.value="",r.value="",e.value="",o.value=""}(),e.querySelector(".excursions__field-input--update").addEventListener("click",(()=>{m(n,e)}))}function m(n,r){r.innerHTML=`\n      <header class="excursions__header">\n          <input class="excursions__title" type="text" value="${n.title}" />\n          <textarea rows="10" class="excursions__description">${n.description}</textarea>\n      </header>\n      <form class="excursions__form">\n          <div class="excursions__field">\n              <label class="excursions__field-name">\n                  Dorosły: <input class="excursions__adult-price" type="number" value="${n.adultPrice}" />\n              </label>\n          </div>\n          <div class="excursions__field">\n              <label class="excursions__field-name">\n                  Dziecko: <input class="excursions__child-price" type="number" value="${n.childPrice}" />\n              </label>\n          </div>\n          <div class="excursions__field excursions__field--submit">\n              <input\n                  class="excursions__field-input excursions__field-input--update"\n                  value="zapisz"\n                  type="submit"\n              />\n              <input\n                  class="excursions__field-input excursions__field-input--remove"\n                  value="usuń"\n                  type="submit"\n              />\n          </div>\n      </form>\n  `,r.querySelector(".excursions__field-input--update").addEventListener("click",(async()=>{const e={id:n.id,title:r.querySelector(".excursions__title").value,description:r.querySelector(".excursions__description").value,adultPrice:parseFloat(r.querySelector(".excursions__adult-price").value),childPrice:parseFloat(r.querySelector(".excursions__child-price").value)};try{const n=new x;m(await n.updateExcursion(e),r)}catch(n){console.error("Błąd podczas aktualizacji wycieczki: ",n)}}))}!async function(){const n=new x;try{(await n.fetchData(n.apiUrl)).forEach((n=>{E(n)}))}catch(n){console.error("Błąd podczas pobierania danych: ",n)}}(),document.querySelector(".form").addEventListener("submit",(async function n(r){document.querySelector(".form").addEventListener("submit",n),r.preventDefault();const e=document.getElementById("excursion-title"),o=document.getElementById("excursion-description"),i=document.getElementById("excursion-adult-price"),t=document.getElementById("excursion-child-price"),s=e.value,a=o.value,c=parseFloat(i.value),d=parseFloat(t.value);if(function(n,r,e,o){return n&&r&&!isNaN(e)&&!isNaN(o)}(s,a,c,d)){const n={title:s,description:a,adultPrice:c,childPrice:d};try{const r=await async function(n){try{const r=new x;return await r.addExcursion(n)}catch(n){throw n}}(n);E(r)}catch(n){console.error("Błąd podczas dodawania wycieczki: ",n)}}else alert("Błąd: Wszystkie pola muszą być wypełnione")})),document.querySelector(".panel__excursions").addEventListener("click",(async function(n){if(n.target.classList.contains("excursions__field-input--remove")){const r=n.target.closest("li");if(!r)return;const e=r.querySelector(".excursions__title").textContent;if(window.confirm(`Are you sure you want to remove excursion "${e}"?`)){const n=r.getAttribute("data-id");r.remove();try{const r=new x;await r.removeExcursion(n)}catch(n){console.error("Błąd podczas usuwania wycieczki: ",n)}}}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,